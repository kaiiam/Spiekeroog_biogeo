names(idw.output)[1:3] <- c("long", "lat", "var1.pred")  # give names to the modelled variables
ggplot() + geom_tile(data = idw.output, alpha = 0.8, aes(x = long, y = lat,
fill = round(var1.pred, 0))) +
scale_fill_gradientn(colours = rev(rainbow(6) )) +
#+ scale_fill_gradient(low = "blue", high = "red")
geom_point(data = march_oxygen_profile, aes(x = x, y = y), shape = 0,
colour = "black") + labs(fill = expression(paste("Oxygen (μmol l"^"-1" *")" )), title = "March Spiekeroog Oxygen Transect")
idw.output <- filter(idw.output, lat > 0)
ggplot() + geom_tile(data = idw.output, alpha = 0.8, aes(x = long, y = lat,
fill = round(var1.pred, 0))) +
scale_fill_gradientn(colours = rev(rainbow(6) )) +
#+ scale_fill_gradient(low = "blue", high = "red")
geom_point(data = march_oxygen_profile, aes(x = x, y = y), shape = 0,
colour = "black") + labs(fill = expression(paste("Oxygen (μmol l"^"-1" *")" )), title = "March Spiekeroog Oxygen Transect")
march_oxygen_profile_test
?iwd()
??iwd()
idw
iwd()
??idw()
View(march_oxygen_profile_test)
idw <- idw(formula = oxygen ~ 1, locations = march_oxygen_profile_test,
data = grd)  # apply idw model for the data
data(meuse)
coordinates(meuse) = ~x + y
data(meuse.grid)
gridded(meuse.grid) = ~x + y
m <- vgm(0.59, "Sph", 874, 0.04)
x <- krige(log(zinc) ~ 1, meuse, meuse.grid, model = m)
spplot(x["var1.pred"], main = "ordinary kriging predictions")
data(meuse)
coordinates(meuse) = ~x + y
data(meuse)
View(meuse)
coor <- coordinates(meuse) = ~x + y
coordinates(meuse) = ~x + y
data(meuse.grid)
View(meuse.grid)
gridded(meuse.grid) = ~x + y
View(meuse.grid)
m <- vgm(0.59, "Sph", 874, 0.04)
m
x <- krige(log(zinc) ~ 1, meuse, meuse.grid, model = m)
x
spplot(x["var1.pred"], main = "ordinary kriging predictions")
data(meuse)
coordinates(meuse) = ~x + y
data(meuse.grid)
meuse.grid
head(meuse.grid)
plot(meuse.grid$x, meuse.grid$y)
setwd("/home/kai/Desktop/grad_school/marmic/lab_rotations/rotation_3/Spiekeroog_biogeo/week5/GMT_figure/march_oxygen_profile")
march_oxygen_profile <- read.csv(file = "march_oxygen_profile.csv",
header = TRUE)
march_oxygen_profile_test <- march_oxygen_profile  # duplicate air temp. data file
march_oxygen_profile_test <- drop_na(march_oxygen_profile_test) # %>% drop_na()
coordinates(march_oxygen_profile_test) = ~x + y
x.range <- as.numeric(c(5959887, 5959929))  # min/max longitude of the interpolation area
y.range <- as.numeric(c(-1.3315, 1.0653))  # min/max latitude of the interpolation area
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.1),
y = seq(from = y.range[1], to = y.range[2], by = 0.1))
coordinates(grd) <- ~x + y
gridded(grd) <- TRUE
idw <- idw(formula = oxygen ~ 1, locations = march_oxygen_profile_test,
newdata = grd)  # apply idw model for the data
idw.output = as.data.frame(idw)  # output is defined as a data table
names(idw.output)[1:3] <- c("long", "lat", "var1.pred")  # give names to the modelled variables
idw.output <- filter(idw.output, lat > 0)
ggplot() + geom_tile(data = idw.output, alpha = 0.8, aes(x = long, y = lat,
fill = round(var1.pred, 0))) +
scale_fill_gradientn(colours = rev(rainbow(6) )) +
#+ scale_fill_gradient(low = "blue", high = "red")
geom_point(data = march_oxygen_profile, aes(x = x, y = y), shape = 0,
colour = "black") + labs(fill = expression(paste("Oxygen (μmol l"^"-1" *")" )), title = "March Spiekeroog Oxygen Transect")
?expand.grid()
seq(from = x.range[1], to = x.range[2], by = 0.1)
meuse
data(meuse)
View(meuse)
coordinates(meuse) = ~x + y
data(meuse.grid)
View(meuse.grid)
plot(meuse.grid$x, meuse.grid$y)
curve(x^2, from = 0, to = 5)
?seq()
c <- curve(x^2, from = 0, to = 5)
c <- curve(1/2x^2, from = 0, to = 5)
c <- curve(0.5x^2, from = 0, to = 5)
?vurve
?curve
c$y
c <- curve((0.5)*x^2, from = 0, to = 5)
c <- curve((0.5)*x^2+1, from = 0, to = 5)
setwd("/home/kai/Desktop/grad_school/marmic/lab_rotations/rotation_3/Spiekeroog_biogeo/week5/GMT_figure/march_oxygen_profile")
march_oxygen_profile <- read.csv(file = "march_oxygen_profile.csv",
header = TRUE)
march_oxygen_profile_test <- march_oxygen_profile  # duplicate air temp. data file
march_oxygen_profile_test <- drop_na(march_oxygen_profile_test) # %>% drop_na()
class(march_oxygen_profile_test)
march_oxygen_profile_test
test <- filter(march_oxygen_profile_test, depth ==0)
test
test <- filter(march_oxygen_profile_test, depth =="0")
View(test)
test <- filter(march_oxygen_profile_test, depth =="0")
test <- filter(march_oxygen_profile_test, depth ==10)
View(test)
plot(test$x, test$y)
library("minpack.lm")
library("nlsMicrobio")
library("nlstools")
setwd("/home/kai/Desktop/life_stuff/bitcoin/price_graph")
mydata = read.csv("subset.csv")
fit_nls = nls(y ~ (x ^ b), data = mydata, start = c(b = 1.051414), trace = T)
coef(fit_nls)
plot(mydata$x, mydata$y)
lines(mydata$x, mydata$x^coef(fit_nls), col = "red")
curve.nlslrc <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata, start = list(a = 4.892011638,b = 0.002913128), trace = T)
A <- coef(curve.nlslrc)[1]
B <- coef(curve.nlslrc)[2]
coef(curve.nlslrc)
plot(mydata$x, mydata$y)
lines(mydata$x, (exp(1)^(A + B * mydata$x)), col = "red")
mydata1 = read.csv("subset1.csv")
curve.1 <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata1, start = list(a = 4.001673388,b = 0.004125605), trace = T)
A <- coef(curve.1)[1]
B <- coef(curve.1)[2]
coef(curve.1)
plot(mydata1$x, mydata1$y)
lines(mydata1$x, (exp(1)^(A + B * mydata1$x)), col = "blue")
summary(curve.1)
mydata2 = read.csv("subset2.csv")
curve.2 <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata2, start = list(a = 1.971190124,
b = 0.006725387), trace = T)
A <- coef(curve.2)[1]
B <- coef(curve.2)[2]
coef(curve.2)
plot(mydata2$x, mydata2$y)
lines(mydata2$x, (exp(1)^(A + B * mydata2$x)), col = "green")
mydata3 = read.csv("subset3.csv")
curve.3 <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata3, start = list(a = 6.78177,
b = 0.0139365), trace = T)
A <- coef(curve.3)[1]
B <- coef(curve.3)[2]
coef(curve.3)
plot(mydata3$x, mydata3$y)
lines(mydata3$x, (exp(1)^(A + B * mydata3$x)), col = "red")
summary(curve.3)
curve.4 <- lm(y ~ x, data = mydata3)
coef(curve.4)
plot(mydata3$x, mydata3$y, xlim = c(0,150), ylim = c(0,6000))
lines(0:150, (19.3288*(0:150) + 813.0454) , col = "red")
plot(mydata3$x, mydata3$y, xlim = c(0,90), ylim = c(0,4000), xlab = "time days since 03.24.2017", ylab = "price $US")
lines(0:150, (exp(1)^(A + B * 0:150)), col = "red")
post_model <- read.csv("post_model.csv")
points(post_model$x, post_model$y, pch=16, col="blue")
may29<-(exp(1)^(A + B * 67))
may30<-(exp(1)^(A + B * 68))
may31<-(exp(1)^(A + B * 69))
june1<-(exp(1)^(A + B * 70))
june2<-(exp(1)^(A + B * 71))
june3<-(exp(1)^(A + B * 72))
may29
may30
may31
june1
june2
june3
mydata3 = read.csv("subset3.csv")
curve.3 <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata3, start = list(a = 6.78177,
b = 0.0139365), trace = T)
A <- coef(curve.3)[1]
B <- coef(curve.3)[2]
coef(curve.3)
plot(mydata3$x, mydata3$y)
lines(mydata3$x, (exp(1)^(A + B * mydata3$x)), col = "red")
test
test
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x)), data = select(test, x, y), start = list(a = 6.78177,
b = 0.0139365), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x) - c), data = select(test, x, y),
start = list(a = 0.5, b = 0.1, c = 0.2 ), trace = T)
max(test$x)
max(test$x) - min(test$x)
min(test$x)
test <- mutate(test, x1 = x - 5959899)
plot(test$x, test$y)
plot(test$x1, test$y)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x) - c), data = select(test, x1, y),
start = list(a = 0.5, b = 0.1, c = 0.2 ), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x)), data = select(test, x1, y),
start = list(a = 0.5, b = 0.1 ), trace = T)
curve.3 <- minpack.lm::nlsLM(y ~ (exp(1)^(a + b * x)), data = mydata3, start = list(a = 6.78177,
b = 0.0139365), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.5, b = 0.1, c = 0.2 ), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.0973859, b = 0.0953959, c = 0.498891 ), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
coef(top_curve)
plot(test$x1, test$y)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
A
B
C
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
min(test$x)
test <- mutate(test, x1 = x - min(test$x))
View(test)
test <- filter(march_oxygen_profile_test, depth ==10)
test <- mutate(test, x1 = x - min(test$x))
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
coef(top_curve)
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
summary(top_curve)
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502394, b = 0.295825), trace = T)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502451, b = 0.295768), trace = T)
coef(top_curve)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1)), col = "red")
nlsLM
?nlsLM
top_curve <- nls(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
summary(top_curve)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502451, b = 0.295768), trace = T)
lm(y ~ poly(x, 3, raw=TRUE) , data = select(test, x1, y))
nls_fit <- nls(y ~ a + b * x^(-c), data = select(test, x1, y), start = list(a = 0.1, b = 0.5,
c = 0.2))
nls_fit <- nls(y ~ a + b * x1^(-c), data = select(test, x1, y), start = list(a = 0.1, b = 0.5,
c = 0.2))
nls_fit <- nls(y ~ a + b * x1^(-c), data = select(test, x1, y), start = list(a = 0.1, b = 0.5,
c = 2))
nls_fit <- nls(y ~ a + b * x1^(-c), data = select(test, x1, y), start = list(a = 0, b = 0.5,
c = 2))
loess_fit <- loess(y ~ x1, data = select(test, x1, y))
plot(test$x1, test$y)
lines(test$x1, predict(loess_fit), col = "blue")
library(ggplot2)
library(gstat)
library(sp)
library(maptools)
library(dplyr)
library(tidyr)
setwd("/home/kai/Desktop/grad_school/marmic/lab_rotations/rotation_3/Spiekeroog_biogeo/week5/GMT_figure/march_oxygen_profile")
march_oxygen_profile <- read.csv(file = "march_oxygen_profile.csv",
header = TRUE)
march_oxygen_profile_test <- march_oxygen_profile  # duplicate air temp. data file
march_oxygen_profile_test <- drop_na(march_oxygen_profile_test) # %>% drop_na()
test <- filter(march_oxygen_profile_test, depth ==10)
test <- mutate(test, x1 = x - min(test$x))
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
summary(top_curve)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502451, b = 0.295768), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1)), col = "red")
summary(top_curve)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502451, b = 0.295768), trace = T)
loess_fit <- loess(y ~ x1, data = select(test, x1, y))
plot(test$x1, test$y)
lines(test$x1, predict(loess_fit), col = "blue")
?loess()
loess_fit
c <- curve(loess_fit, from 0, to 30)
summary(loess_fit)
?predict()
predict(loess_fit)
c <- curve((0.5)*x^2+1, from = 0, to = 5)
lm_obj <- lm(y ~ a * x1^2 + b * x1 + c, data = select(test, x1, y))
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1)), data = select(test, x1, y),
start = list(a = -0.502451, b = 0.295768), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1)), col = "red")
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
c <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30)
c$y
?curve
c <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30, n=5)
c$y
c <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30)
c$y
length(c$y)
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
summary(top_curve)
march_oxygen_profile_test
?as.numeric
x.range <- as.numeric(c(5959887, 5959929))  # min/max longitude of the interpolation area
?seq
seq(from = x.range[1], to = x.range[2], by = 0.1)
x.range <- as.numeric(c(5959887, 5959929))  # min/max longitude of the interpolation area
y.range <- as.numeric(c(-1.3315, 1.0653))  # min/max latitude of the interpolation area
grd <- expand.grid(x = seq(from = x.range[1], to = x.range[2], by = 0.1),
y = seq(from = y.range[1], to = y.range[2], by = 0.1))
View(grd)
?expand.grid()
View(c)
march_oxygen_profile_test <- march_oxygen_profile  # duplicate air temp. data file
march_oxygen_profile_test <- drop_na(march_oxygen_profile_test) # %>% drop_na()
test <- filter(march_oxygen_profile_test, depth ==10)
test <- mutate(test, x1 = x - min(test$x))
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(test, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(test$x1, test$y)
lines(test$x1, (exp(1)^(A - B * test$x1) - C), col = "red")
c <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30)
View(c)
View(test)
c$y
head(c$x,c$y)
head(c$x,c$y)
head(select(c, x, y))
c
c <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30, n=100)
View(test)
c
View(c)
top <- filter(march_oxygen_profile_top, depth ==10)
top <- mutate(top, x1 = x - min(top$x))
top <- filter(march_oxygen_profile_test, depth ==10)
top <- mutate(top, x1 = x - min(top$x))
top_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(top, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
A <- coef(top_curve)[1]
B <- coef(top_curve)[2]
C <- coef(top_curve)[3]
plot(top$x1, top$y)
lines(top$x1, (exp(1)^(A - B * top$x1) - C), col = "red")
top_list <- curve((exp(1)^(A - B * x)-C), from = 0, to = 30, n=100)
top_list$y
bottom <- filter(march_oxygen_profile_test, depth ==100)
bottom <- mutate(bottom, x1 = x - min(bottom$x))
bottom
bottom_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(top, x1, y),
start = list(a = 0.097386, b = 0.0953959, c = 0.498891 ), trace = T)
bottom_curve <- minpack.lm::nlsLM(y ~ (exp(1)^(a - b * x1) - c), data = select(top, x1, y),
start = list(a = 0.0833628, b = 0.0953959, c = 0.498891 ), trace = T)
Ab <- coef(bottom_curve)[1]
Bb <- coef(bottom_curve)[2]
Cb <- coef(bottom_curve)[3]
plot(bottom$x1, bottom$y)
lines(bottom$x1, (exp(1)^(Ab - Bb * bottom$x1) - Cb), col = "red")
loess_fit <- loess(y ~ x1, data = select(bottom, x1, y))
lines(bottom$x1, predict(loess_fit), col = "blue")
coef(loess_fit)
summary(loess_fit)
formula(loess_fit)
bottom_list <- curve(predict(loess_fit))
predict(loess_fit)
?loess
loess_fit
loess_fit$n
loess_fit$fitted
loess_fit$residuals
loess_fit$enp
loess_fit$terms
loess_fit$xnames
loess_fit$weights
loess_fit$y
loess_fit$pars
loess_fit$fitted
loess_fit$s
loess_fit$call
class(loess_fit)
loess_fit$fitted
givenY <- 15
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$y
abline(h=givenY, lty=2)
abline(v=estX, lty=2)
givenY <- 0
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$y
abline(h=givenY, lty=2)
abline(v=estX, lty=2)
givenY <- -09
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$y
abline(h=givenY, lty=2)
abline(v=estX, lty=2)
givenY <- -0.9
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$y
abline(h=givenY, lty=2)
abline(v=estX, lty=2)
march_oxygen_profile_test
max(march_oxygen_profile_test$x)
min(march_oxygen_profile_test$x)
max(march_oxygen_profile_test$x) - min(march_oxygen_profile_test$x)
march_oxygen_profile <- read.csv(file = "march_oxygen_profile.csv",
header = TRUE)
march_oxygen_profile_test <- march_oxygen_profile  # duplicate air temp. data file
march_oxygen_profile_test <- drop_na(march_oxygen_profile_test) # %>% drop_na()
max_x <- max(march_oxygen_profile_test$x) - min(march_oxygen_profile_test$x)
x.range <- as.numeric(c(0, max_x))
x_coors = seq(from = x.range[1], to = x.range[2], by = 0.1)
x_coors
estX
x_coors = seq(from = x.range[1], to = x.range[2], by = 0.1)
class(x_coors)
type(x_coors)
is.numeric(x_coors)
y_coor_generator <- function(x, loess_obj){
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(x+1)
}
sapply(x_coors, y_coor_generator( x, loess_fit) )
y_coor_generator <- function(x, loess_obj){
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(as.numeric(x+1))
}
sapply(x_coors, y_coor_generator( x, loess_fit) )
y_coor_generator <- function(x, loess_obj){
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(x)
}
sapply(x_coors, y_coor_generator( x, loess_fit) )
y_coor_generator <- function(x) {
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(x)
}
sapply(x_coors, y_coor_generator( x, loess_fit) )
sapply(x_coors, y_coor_generator( x) )
class(y_coor_generator)
?sapply
y_coor_generator <- function(x) {
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(x)
}
sapply(x_coors, y_coor_generator( x) )
sapply(x_coors, y_coor_generator )
sapply(x_coors, FUN=function(x) y_coor_generator(x)  )
y_coor_generator <- function(x, loess_obj) {
#return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
return(x)
}
sapply(x_coors, FUN=function(x) y_coor_generator(x, loess_fit)  )
y_coor_generator <- function(x, loess_obj) {
return(approx(x=loess_obj$fitted, y=loess_obj$x, xout=givenY)$y)
#return(x)
}
sapply(x_coors, FUN=function(x) y_coor_generator(x, loess_fit)  )
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$x
estX <- approx(x=loess_fit$fitted, y=loess_fit$x, xout=givenY)$y
predict(loess_fit, x_coors)
y_coors <- predict(loess_fit, x_coors)
View(y_coors)
bind <- rbind(x_coors,y_coors)
View(bind)
bind <- cbind(x_coors,y_coors)
points(bind$x_coors, bind$y_coors)
bind
class(bind)
points(bind[1], bind[2])
bind[1]
bind[2]
bind <- as.data.frame(bind)
points(bind$x_coors, bind$y_coors)
